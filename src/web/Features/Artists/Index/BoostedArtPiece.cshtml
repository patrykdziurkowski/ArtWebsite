@using web.Features.Artists.Index
@model ArtistProfileModel

<div id="boosted-art-piece-container">
    @if (Model.BoostExpirationDate is not null)
    {
        <div class="boosted-art-piece">
            <img src="@Model.BoostedArtPiecePath" alt="Boosted Art Piece">
            @if (Model.IsOwner)
            {
                <span class="boost-expiration">Expires on @Model.BoostExpirationDate</span>
            }
        </div>
    }
</div>

<script>
    function boostArtPiece(artPieceId) {
        fetch('/api/artist/boost', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                artPieceId: artPieceId
            }),
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Response from boosting art piece was not ok.");
                }

                return response.json();
            })
            .then(responseObject => {
                const boost = responseObject;
                const container = document.querySelector("#boosted-art-piece-container");

                const boostedImage = document.createElement("div");
                boostedImage.className = "boosted-art-piece";
                boostedImage.innerHTML = `
                    <img src="${boost.imagePath}" alt="Boosted Art Piece">
                    <span class="boost-expiration">Expires on ${boost.expirationDate}</span>
                `;
                container.appendChild(boostedImage);
                const boostButtons = document.querySelectorAll(".boost-btn");
                for (const button of boostButtons) {
                    button.remove();
                }
            })
            .catch(() => alert('Error boosting art piece.'));
    }
</script>