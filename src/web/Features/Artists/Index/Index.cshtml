@using web.Features.Artists.Index
@model ArtistProfileModel

<div class="container mt-4">
    <h2>@Model.Name's Profile</h2>
    <p><strong>Summary:</strong> @Model.Summary</p>
    <a asp-controller="ArtPiece" asp-action="Upload" class="btn btn-primary">Upload!</a>

    @if (@Model.IsOwner)
    {
        <button id="deactivate-artist-popup" class="btn btn-danger" data-bs-toggle="modal"
            data-bs-target="#deleteModal">Delete Profile</button>
    }

    <div id="artPiecesList" class="list-group">Loading...</div>
    <button id="loadMoreButton" class="btn btn-primary mt-3" style="display: none;">Load More</button>

    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this profile? This action cannot be undone.
                </div>
                <div class="modal-footer">
                    <form asp-controller="Artist" asp-action="Deactivate" method="POST" class="d-inline">
                        @Html.AntiForgeryToken()
                        <button id="deactivate-artist" type="submit" class="btn btn-danger">Delete</button>
                    </form>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let offset = 0;
    const artPiecesPerPage = 5;

    function fetchArtPieces() {
        const list = document.querySelector('#artPiecesList');
        const loadMore = document.querySelector('#loadMoreButton');
        const artistId = "@Model.Id";

        fetch(`/api/artists/${artistId}/artpieces?offset=${offset}`)
            .then(response => response.json())
            .then(data => {
                if (offset == 0) {
                    list.innerText = '';
                }
                if (offset == 0 && data.length === 0) {
                    list.innerText = 'No art pieces found.';
                }

                // If loaded less art pieces than requested, hide the button since we're at the end
                if (data.length < artPiecesPerPage) {
                    loadMore.style.display = 'none';
                } else {
                    loadMore.style.display = 'block';
                }

                data.forEach(artPiece => {
                    const card = document.createElement("div");
                    card.className = "col-md-4 mb-3";
                    card.innerHTML = `
                    <div class="card">
                        <img src="${artPiece.imagePath}" class="card-img-top" alt="Image">
                        <div class="card-body">
                            <p class="card-text">${artPiece.description}</p>
                            <small class="text-muted">${new Date(artPiece.uploadDate).toLocaleDateString()}</small>
                        </div>
                    </div>
                `;
                    list.appendChild(card);
                });
                offset += artPiecesPerPage;
            });
    }

    document.querySelector('#loadMoreButton').addEventListener('click', function () {
        fetchArtPieces();
    });

    fetchArtPieces();
</script>