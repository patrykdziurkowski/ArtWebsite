@using web.Features.Reviews.ReviewArtPiece
@model ReviewArtPieceModel
<div class="container">
    <div id="artContainer" class="m-auto text-center">
        <h1>Loading...</h1>
    </div>
    <button id="reviewArt" class="btn btn-light m-3" data-bs-toggle="modal"
        data-bs-target="#reviewModal">Review</button>
    <button id="likeArtPiece" class="btn btn-light m-3">Like</button>
</div>

<div class="modal fade" id="reviewModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Review Art</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form asp-controller="Review" asp-action="ReviewArtPiece" method="post" id="reviewForm">
                    <div class="form-group">
                        <textarea name="comment" class="form-control mb-2" placeholder="Review this art piece" required
                            asp-for="Comment"></textarea>
                        <span asp-validation-for="Comment" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <div class="rating">
                            <input type="radio" id="star5" name="Rating" asp-for="Rating" value="5">
                            <label for="star5">&#9733;</label>
                            <input type="radio" id="star4" name="Rating" asp-for="Rating" value="4">
                            <label for="star4">&#9733;</label>
                            <input type="radio" id="star3" name="Rating" asp-for="Rating" value="3">
                            <label for="star3">&#9733;</label>
                            <input type="radio" id="star2" name="Rating" asp-for="Rating" value="2">
                            <label for="star2">&#9733;</label>
                            <input type="radio" id="star1" name="Rating" asp-for="Rating" value="1">
                            <label for="star1">&#9733;</label>
                        </div>
                        <span asp-validation-for="Rating" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="hidden" name="artPieceId" value="">
                    </div>
                    <button type="submit" class="btn btn-primary">Submit Review</button>
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    async function loadArtPiece() {
        const response = await fetch("/api/artpiece");
        if (response.status === 204) {
            return null;
        }

        const data = await response.json();
        const artContainer = document.getElementById('artContainer');
        if (!data || !data.imagePath) {
            artContainer.innerHTML = '<h1>No more images to review.</h1>';
            document.querySelector('#likeArtPiece').style.display = 'none';
            document.querySelector('#reviewArt').style.display = 'none';
            return null;
        }

        artContainer.innerHTML = `
                <img id="artPieceImage" src="${data.imagePath}" alt="Art Piece" class="img-fluid rounded">
                <div class="p-2">
                    <p>${data.description}</p>
                </div>`;
        document.querySelector('#reviewForm input[name="artPieceId"]').value = data.id.value;

        return data;
    }

    document.addEventListener('DOMContentLoaded', async () => {
        let isLiked = false;
        const artPiece = await loadArtPiece();
        const likeButton = document.querySelector('#likeArtPiece');

        if (artPiece !== null) {
            isLiked = artPiece.isLikedByCurrentUser;
            if (isLiked) {
                likeButton.innerText = "Unlike";
            }
        }

        likeButton.addEventListener('click', async (e) => {
            const artPieceId = document.querySelector('#reviewForm input[name="artPieceId"]').value;

            if (isLiked) {
                const response = await fetch(`/api/artpieces/${artPieceId}/like`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });

                if (response.ok) {
                    console.log('Art piece unliked successfully!');
                    likeButton.innerText = "Like";
                } else {
                    console.error('Failed to unlike the art piece', response.statusText);
                }
            }
            else {
                const response = await fetch(`/api/artpieces/${artPieceId}/like`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });

                if (response.ok) {
                    console.log('Art piece liked successfully!');
                    likeButton.innerText = "Unlike";
                } else {
                    console.error('Failed to like the art piece', response.statusText);
                }
            }
        });

        document.querySelector('#reviewForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const form = new FormData(document.querySelector('#reviewForm'));
            const data = {
                comment: form.get('comment'),
                rating: document.querySelector('input[name="Rating"]:checked').value,
                artPieceId: form.get('artPieceId')
            };

            const response = await fetch('/api/reviews/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            if (response.status !== 200) {
                const data = await response.json();
                const validationErrorsText = document.querySelector('#reviewForm *[name="comment"] + span');
                validationErrorsText.innerText = data.errors.Comment;
            }

            await loadArtPiece();
            document.querySelector('#reviewModal .btn-close').click();
        });
    });
</script>
