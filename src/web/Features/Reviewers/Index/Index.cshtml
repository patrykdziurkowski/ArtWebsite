@using web.Features.Reviewers
@model Reviewer

<div class="container mt-5">
    <h2>@Model.Name's profile</h2>
    <p>Joined: <span id="reviewerJoinDate">@Html.Raw(Model.JoinDate.ToString("o"))</span> | @Model.ReviewCount total
        reviews</p>

    <div class="container mt-3">
        <ul class="nav nav-tabs" id="reviewerTabs">
            <li class="nav-item">
                <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#reviewsTab">Reviews</button>
            </li>
            <li class="nav-item">
                <button class="nav-link" data-bs-toggle="tab" data-bs-target="#likesTab">Likes</button>
            </li>
        </ul>

        <div class="tab-content mt-3">
            <div class="tab-pane fade show active" id="reviewsTab">
                <div id="reviewsList" class="list-group">Loading...</div>
                <button id="loadMoreReviews" class="btn btn-primary mt-3" style="display: none;">Load More</button>
            </div>
            <div class="tab-pane fade" id="likesTab">
                <div id="likesList" class="list-group">Loading...</div>
                <button id="loadMoreLikes" class="btn btn-primary mt-3" style="display: none;">Load More</button>
            </div>
        </div>
    </div>
</div>
<script>
    document.querySelector('#reviewerJoinDate').innerText = new Date(
        '@Html.Raw(Model.JoinDate.ToString("o"))').toLocaleString();
</script>
<script>
    let likesOffset = 0;
    const likesPerPage = 10;

    function loadLikes() {
        const list = document.querySelector('#likesList');
        const loadMore = document.querySelector('#loadMoreLikes');

        fetch(`/api/reviewer/likes?offset=${likesOffset}`)
            .then(response => response.json())
            .then(data => {
                if (likesOffset == 0) {
                    list.innerText = '';
                }
                if (likesOffset == 0 && data.length === 0) {
                    list.innerText = 'No likes found.';
                }

                // If loaded less likes than requested, hide the button since we're at the end
                if (data.length < likesPerPage) {
                    loadMore.style.display = 'none';
                } else {
                    loadMore.style.display = 'block';
                }

                data.forEach(like => {
                    const likeItem = document.createElement('div');
                    likeItem.classList.add('list-group-item');
                    likeItem.innerHTML = `
                        <strong>${new Date(like.date).toLocaleString()}</strong>
                        <p> ${like.artPieceId.value}</p>
                    `;
                    list.appendChild(likeItem);
                });
                likesOffset += likesPerPage;
            });
    }

    document.querySelector('#loadMoreLikes').addEventListener('click', function () {
        loadLikes();
    });

    loadLikes();
</script>
<script>
    let reviewsOffset = 0;
    const reviewsPerPage = 10;

    function loadReviews() {
        const list = document.querySelector('#reviewsList');
        const loadMore = document.querySelector('#loadMoreReviews');

        fetch(`/api/reviewers/@Model.Id/reviews?offset=${reviewsOffset}`)
            .then(response => response.json())
            .then(data => {
                if (reviewsOffset == 0) {
                    list.innerText = '';
                }
                if (reviewsOffset == 0 && data.length === 0) {
                    list.innerText = 'No reviews found.';
                }

                // If loaded less reviews than requested, hide the button since we're at the end
                if (data.length < reviewsPerPage) {
                    loadMore.style.display = 'none';
                } else {
                    loadMore.style.display = 'block';
                }

                data.forEach(review => {
                    const reviewItem = document.createElement('div');
                    reviewItem.classList.add('list-group-item');
                    reviewItem.innerHTML = `
                        <strong>${new Date(review.date).toLocaleString()}</strong>
                        ${Array.from({ length: 5 }, (_, i) =>
                        `<label class="${i < review.rating ? 'checked-star' : ''}">&#9733;</label>`
                    ).join('')}
                        <p> ${review.comment}</p>
                        <img src="${review.imagePath}">
                    `;
                    list.appendChild(reviewItem);
                });
                reviewsOffset += reviewsPerPage;
            });
    }

    document.querySelector('#loadMoreReviews').addEventListener('click', function () {
        loadReviews();
    });

    loadReviews();
</script>
